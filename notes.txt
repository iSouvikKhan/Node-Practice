--> commands : npm init --yes
               npm i express
               npm i ejs
               npm i express-ejs-layouts
               npm i mongoose
               npm i cookie-parser
               npm i passport
               npm i passport-local
               npm i express-session
               npm i connect-mongo@3 -> this is okay but latest version throws error
               npm i node-sass-middleware
               npm i connect-flash
               npm i multer
               npm i passport-jwt
               npm i jsonwebtoken

               npm i passport-google-oauth --> not implemented
               npm i crypto

               npm i nodemailer

               npm i kue
               npm i redis

               npm i socket.io
               
               npm i morgan
               npm i rotating-file-stream
               npm i gulp
               npm i gulp-cssnano
               npm i gulp-rev


--> mkdir routes controllers views models config

--> production level port number is "80"

--> root index.js will send request to -> routes/index.js

--> "const express = require('express');" -> express is invoked multiple times but irrespective of the number of call
    only one instance of express will be used here

--> controller : is a set of different actions

--> http://localhost:8000/users/profile

--> _header and _footer are partials

--> layout is different from partials

--> ./ -> says search in the neighbouring file

--> console.error.bind() -> displays console.log as an error

--> using "-" is known as kebab case

--> cookies : with every request browser sends a file to the server and with its response server sends its
              the file back to the browser, storing users identity

--> Passport.js -> is a middleware
                   uses session cookie

--> session cookie - stores all info plus it is also encrypted

--> serializeUser : taking the document id and putting it in the cookie

--> deserializeUser : in the server we r using id to find the user

--> ctrl + space -> to trigger auto complete

--> saveUninitialized : when ever there is a request which is not initialised or when a session is not initialised
    or the user is not loggedin in that case do i want to store extra data in session cookies ?? hence false

--> SCSS -> the most commonly used one
--> SASS -> the indented version

--> browser understands only css
--> browser converts SCSS or SASS file to CSS

--> async - await : it tells your server that this function contains some async statements and u need to wait with each async statement
                    which has been marked as async and once it gets executed then move on to the next

--> Flash messages : are stored in session cookies and are stored in next request

--> JWT -> Header : Payload : Signature

--> Every worker in Kue has a process function

--> Process Function : tells the worker whenever a new task is added into your queue, u need to run the code inside this process function

--> Every task put into the queue is a job

--> To view all queues -> ./node_modules/kue/bin/kue-dsahboard ( leave the terminal in this location of your project and earch localhost:3000 )

--> http://localhost:8006/api/v1/questions/create
    localhost:8000/api/v1/posts
    localhost:8000/api/v1/users/create-session

--> 